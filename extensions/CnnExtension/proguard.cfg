-ignorewarnings

-injars      bin/classes
-injars      libs
-outjars     bin/classes-processed.jar

-libraryjars /Users/hle/Development/workspace/android/libs/commons-codec-1.6.jar
-libraryjars /Users/hle/Development/workspace/android/libs/android-support-v4.jar
-libraryjars /Users/hle/Development/workspace/android/libs/nineoldandroids-2.4.0.jar
-libraryjars /Users/hle/Development/workspace/android/libs/jackson-core-2.0.2.jar
-libraryjars /Users/hle/Development/workspace/android/libs/signpost-commonshttp4-1.2.jar
-libraryjars /Users/hle/Development/workspace/android/libs/signpost-core-1.2.jar
-libraryjars /Users/hle/Development/workspace/android/libs/juniversalchardet-1.0.3.jar
-libraryjars /Users/hle/Development/workspace/android/libs/GoogleAdMobAdsSdk-6.3.1.jar
-libraryjars /Users/hle/Development/workspace/android/libs/android-query.0.24.3.jar
-libraryjars /Users/hle/Development/workspace/android/libs/dashclock-api-r1.1.jar

-optimizationpasses 5

#When not preverifing in a case-insensitive filing system, such as Windows. Because this tool unpacks your processed jars, you should then use:
-dontusemixedcaseclassnames

#Preverification is irrelevant for the dex compiler and the Dalvik VM, so we can switch it off with the -dontpreverify option.
-dontpreverify

#To repackage classes on a single package
-repackageclasses

#Allow the access modifiers of classes and class members to be modified, while optimizing.
-allowaccessmodification

#The -optimizations option disables some arithmetic simplifications that Dalvik 1.0 and 1.5 can't handle. Note that the Dalvik VM also can't handle aggressive overloading (of static fields).
#To understand or change this check http://proguard.sourceforge.net/index.html#/manual/optimizations.html
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*

#Keep line number
-keepattributes LineNumberTable, *Annotation*

#Specifies to write out some more information during processing. If the program terminates with an exception, this option will print out the entire stack trace, instead of just the exception message.
-verbose

#Keep classes that are referenced on the AndroidManifest
-keep public class * extends android.app.Activity
-keep public class * extends android.app.Application
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider
-keep public class * extends android.preference.Preference
-keep public class com.android.vending.licensing.ILicensingService

-keep public class * extends android.view.View {
    public <init>(android.content.Context);
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>(android.content.Context, android.util.AttributeSet, int);
    public void set*(...);
}

-keep class android.support.v4.app.** { *; } 
-keep interface android.support.v4.app.** { *; } 
-keep class com.actionbarsherlock.** { *; } 
-keep interface com.actionbarsherlock.** { *; } 

-dontwarn android.support.**
-keep class android.support.v4.** {
    <fields>;
    <methods>;
}

-keepclasseswithmembers class * {
    public <init>(android.content.Context, android.util.AttributeSet);
}

-keepclasseswithmembers class * {
    public <init>(android.content.Context, android.util.AttributeSet, int);
}

-keepclassmembers class * extends android.content.Context {
   public void *(android.view.View);
   public void *(android.view.MenuItem);
}

-keepclassmembers class * implements android.os.Parcelable {
    static android.os.Parcelable$Creator CREATOR;
}

-keepclassmembers class **.R$* {
    public static <fields>;
}

-keep public class com.noinnion.android.greader.readerpro.ui.ItemActivity$WebViewJavaScriptInterface {
    public void showCaption(java.lang.String, java.lang.String);
}

-keep public class com.noinnion.android.greader.readerpro.ui.fragment.ItemTabletFragment$WebViewJavaScriptInterface {
    public void showCaption(java.lang.String, java.lang.String);
}
